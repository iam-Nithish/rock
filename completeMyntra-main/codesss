//contoller

 [HttpGet]
 public ActionResult Create()
 {
     return View();
 }


 [HttpPost]
 public ActionResult Create(Medicine studentsData, HttpPostedFileBase ImageFile)
 {
     try
     {
         if (ImageFile != null && ImageFile.ContentLength > 0)
         {
             // Ensure the directory exists
             string directoryPath = Server.MapPath("~/Images/");
             if (!Directory.Exists(directoryPath))
             {
                 Directory.CreateDirectory(directoryPath);
             }

             // Save the file to the server
             string path = Path.Combine(directoryPath, Path.GetFileName(ImageFile.FileName));
             ImageFile.SaveAs(path);

             // Set the ImagePath for storing in the database
             studentsData.ImagePath = "~/Images/" + ImageFile.FileName;
         }

         // Save the Medicine data to the database
         using (var context = new MainCaseStudyEntities())
         {
             context.Medicines.Add(studentsData);
             int resultValue = context.SaveChanges();

             if (resultValue > 0)
             {
                 ViewBag.Message = "Medicine added successfully";
             }
             else
             {
                 ViewBag.Message = "Medicine not inserted";
             }
         }
     }
     catch (Exception ex)
     {
         ViewBag.Message = "Error: " + ex.Message;
     }
     return View(studentsData);
 }



 [HttpGet]
 public ActionResult ReadData()
 {
     try
     {
         using (var context = new MainCaseStudyEntities())
         {
             var Data = context.Medicines.ToList();
             return View(Data);
         }
     }
     catch (Exception ex)
     {
         Response.Write(ex.Message);
     }
     return View();
 }

 public ActionResult Delete(int? id)
 {
     try
     {
         if (id == null)
         {
             return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
         }
         using (var context = new MainCaseStudyEntities())
         {
             Medicine studentsData = context.Medicines.Find(id);
             if (studentsData == null)
             {
                 return HttpNotFound();
             }
             return View(studentsData);
         }
     }
     catch (Exception ex)
     {
         Response.Write(ex.Message);
     }
     return View();

 }

 // POST: StudentsDatas/Delete/5
 [HttpPost, ActionName("Delete")]
 [ValidateAntiForgeryToken]
 public ActionResult Delete(int id)
 {
     try
     {
         using (var context = new MainCaseStudyEntities())
         {
             Medicine studentsData = context.Medicines.Find(id);
             context.Medicines.Remove(studentsData);
             context.SaveChanges();
             return RedirectToAction("ReadData");
         }
     }
     catch (Exception ex)
     {
         Response.Write(ex.Message);
     }
     return View();
 }

 [HttpGet]
 public ActionResult Edit(int? id)
 {
     try
     {
         if (id == null)
         {
             return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
         }
         using (var context = new MainCaseStudyEntities())
         {
             Medicine studentsData = context.Medicines.Find(id);
             if (studentsData == null)
             {
                 return HttpNotFound();
             }
             return View(studentsData);
         }
     }
     catch (Exception ex)
     {
         Response.Write(ex.Message);
     }
     return View();
 }


 [HttpPost]
 [ValidateAntiForgeryToken]
 public ActionResult Edit([Bind(Include = "MId,MedicineName,Manufacturer,ManufactureDate,ExpiryDate,DosageForm,MDescription,Price,ImagePath,Strength")] Medicine studentsData)
 {
     try
     {
         using (var context = new MainCaseStudyEntities())
         {
             if (ModelState.IsValid)
             {
                 context.Entry(studentsData).State = EntityState.Modified;
                 context.SaveChanges();
                 return RedirectToAction("ReadData");
             }
             return View(studentsData);
         }
     }
     catch (Exception ex)
     {
         Response.Write(ex.Message);
     }
     return View();
 }

 public ActionResult Details(int? id)
 {
     try
     {
         using (var context = new MainCaseStudyEntities())
         {
             if (id == null)
             {
                 return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
             }
             Medicine aspEmployee = context.Medicines.Find(id);
             if (aspEmployee == null)
             {
                 return HttpNotFound();
             }
             return View(aspEmployee);
         }
     }
     catch (Exception ex)
     {
         Response.Write(ex.Message);
     }
     return View();

 }


///views

@model MedicineShop.Models.Medicine

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/Admin_LayoutPage1.cshtml";
}



<!-- Inline CSS for styling -->
<style>
    .form-container {
        max-width: 800px;
        margin: 0 auto; /* Center align */
        padding: 20px;
        background-color: #f8f9fa; /* Light grey background */
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Slight shadow for depth */
    }

    .form-horizontal .form-group {
        margin-bottom: 15px;
    }

    .form-horizontal .control-label {
        font-weight: bold;
    }

    .form-horizontal .form-control {
        border-radius: 5px;
    }

    .btn-default {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

        .btn-default:hover {
            background-color: #0056b3;
        }

        .btn-default:focus {
            outline: none;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }

    h2 {
        text-align: center;
        margin-bottom: 20px;
        color: #343a40; /* Dark text color */
    }
</style>

<!-- Add form inside the container -->
<div class="form-container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add Medicine</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.MId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MedicineName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MedicineName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedicineName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Manufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Manufacturer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Manufacturer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManufactureDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ManufactureDate, new { @class = "form-control", @type = "date" })
                @Html.ValidationMessageFor(model => model.ManufactureDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DosageForm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DosageForm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DosageForm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <!-- Label for file input (ImageFile) -->
            <label class="control-label col-md-2">Upload Image</label>
            <div class="col-md-10">
                <!-- File input for image upload -->
                <input type="file" name="ImageFile" class="form-control" />
                <!-- Validation message (not for ImagePath but for ImageFile upload issues) -->
                @Html.ValidationMessage("ImageFile", "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Strength, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Strength, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Strength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

        <div>
            @Html.ActionLink("Back to List", "ReadData")
        </div>
    }
</div>
//delete

@model MedicineShop.Models.Medicine

@{
    ViewBag.Title = "Delete";
    Layout = "~/Views/Shared/Admin_LayoutPage1.cshtml";
}

<style>
    .delete-container {
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 10px;
        box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);
    }

    .delete-details h4 {
        text-align: center;
        color: #333;
    }

    .dl-horizontal dt {
        font-weight: bold;
        width: 150px;
        color: #555;
    }

    .dl-horizontal dd {
        margin-left: 160px;
        color: #333;
    }

    .form-actions {
        text-align: center;
        margin-top: 20px;
    }

    .btn-danger {
        background-color: #d9534f;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
    }

    .btn-secondary {
        background-color: #5bc0de;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
    }
</style>

<h2>Delete</h2>

<h3>Are you sure you want to delete this?</h3>
<div class="delete-container">
    <div class="delete-details">
        <h4>Mobile Details</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>@Html.DisplayNameFor(model => model.MId)</dt>
            <dd>@Html.DisplayFor(model => model.MId)</dd>

            <dt>@Html.DisplayNameFor(model => model.MedicineName)</dt>
            <dd>@Html.DisplayFor(model => model.MedicineName)</dd>

            <dt>@Html.DisplayNameFor(model => model.Manufacturer)</dt>
            <dd>@Html.DisplayFor(model => model.Manufacturer)</dd>

            <dt>@Html.DisplayNameFor(model => model.ManufactureDate)</dt>
            <dd>@Html.DisplayFor(model => model.ManufactureDate)</dd>

            <dt>@Html.DisplayNameFor(model => model.ExpiryDate)</dt>
            <dd>@Html.DisplayFor(model => model.ExpiryDate)</dd>

            <dt>@Html.DisplayNameFor(model => model.DosageForm)</dt>
            <dd>@Html.DisplayFor(model => model.DosageForm)</dd>

            <dt>@Html.DisplayNameFor(model => model.MDescription)</dt>
            <dd>@Html.DisplayFor(model => model.MDescription)</dd>

            <dt>@Html.DisplayNameFor(model => model.Price)</dt>
            <dd>@Html.DisplayFor(model => model.Price)</dd>

            <dt>@Html.DisplayNameFor(model => model.ImagePath)</dt>
            <dd>@Html.DisplayFor(model => model.ImagePath)</dd>

            <dt>@Html.DisplayNameFor(model => model.Strength)</dt>
            <dd>@Html.DisplayFor(model => model.Strength)</dd>
        </dl>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-actions no-color">
                <input type="submit" value="Delete" class="btn btn-danger" /> |
                @Html.ActionLink("Back to List", "ReadData", null, new { @class = "btn btn-secondary" })
            </div>
        }
    </div>
</div>
// details

@model MedicineShop.Models.Medicine

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/Admin_LayoutPage1.cshtml";
}

<style>
    .details-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 10px;
        box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
    }

        .details-container h2 {
            text-align: center;
            margin-bottom: 20px;
            color: #333;
        }

    .dl-horizontal dt {
        font-weight: bold;
        width: 150px;
        color: #555;
        float: left;
        clear: left;
    }

    .dl-horizontal dd {
        margin-left: 160px;
        margin-bottom: 10px;
        color: #333;
    }

    .form-actions {
        text-align: center;
        margin-top: 20px;
    }

    .btn {
        display: inline-block;
        padding: 10px 20px;
        font-size: 16px;
        color: white;
        text-align: center;
        text-decoration: none;
        border: none;
        border-radius: 5px;
        margin: 5px;
    }

    .btn-primary {
        background-color: #007bff;
    }

    .btn-secondary {
        background-color: #6c757d;
    }

        .btn-primary:hover, .btn-secondary:hover {
            opacity: 0.85;
        }
</style>

<div class="details-container">
    <h2>Mobile Details</h2>
    <hr />
    <dl class="dl-horizontal">
        <dt>@Html.DisplayNameFor(model => model.MId)</dt>
        <dd>@Html.DisplayFor(model => model.MId)</dd>

        <dt>@Html.DisplayNameFor(model => model.MedicineName)</dt>
        <dd>@Html.DisplayFor(model => model.MedicineName)</dd>

        <dt>@Html.DisplayNameFor(model => model.Manufacturer)</dt>
        <dd>@Html.DisplayFor(model => model.Manufacturer)</dd>

        <dt>@Html.DisplayNameFor(model => model.ManufactureDate)</dt>
        <dd>@Html.DisplayFor(model => model.ManufactureDate)</dd>

        <dt>@Html.DisplayNameFor(model => model.ExpiryDate)</dt>
        <dd>@Html.DisplayFor(model => model.ExpiryDate)</dd>

        <dt>@Html.DisplayNameFor(model => model.DosageForm)</dt>
        <dd>@Html.DisplayFor(model => model.DosageForm)</dd>

        <dt>@Html.DisplayNameFor(model => model.MDescription)</dt>
        <dd>@Html.DisplayFor(model => model.MDescription)</dd>

        <dt>@Html.DisplayNameFor(model => model.Price)</dt>
        <dd>@Html.DisplayFor(model => model.Price)</dd>

        <dt>@Html.DisplayNameFor(model => model.ImagePath)</dt>
        <dd>@Html.DisplayFor(model => model.ImagePath)</dd>

        <dt>@Html.DisplayNameFor(model => model.Strength)</dt>
        <dd>@Html.DisplayFor(model => model.Strength)</dd>
    </dl>

    <div class="form-actions">
        @Html.ActionLink("Edit", "Edit", new { id = Model.MId }, new { @class = "btn btn-primary" }) |
        @Html.ActionLink("Back to List", "ReadData", null, new { @class = "btn btn-secondary" })
    </div>
</div>
//edit
@model MedicineShop.Models.Medicine

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/Admin_LayoutPage1.cshtml";
}

<style>
    .form-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

        .form-container h4 {
            text-align: center;
            font-size: 24px;
            font-weight: bold;
        }

    .form-group {
        margin-bottom: 15px;
    }

    .form-horizontal .control-label {
        text-align: left;
        font-weight: bold;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        font-size: 14px;
    }

    .btn-default {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
    }

        .btn-default:hover {
            background-color: #0056b3;
        }

    .col-md-2 {
        display: inline-block;
        width: 20%;
        vertical-align: top;
        padding-right: 10px;
    }

    .col-md-10 {
        display: inline-block;
        width: 75%;
    }

    .col-md-offset-2 {
        margin-left: 20%;
    }

    hr {
        margin-bottom: 20px;
    }
</style>

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-container">
        <h4>Medicine</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MId)

        <div class="form-group">
            @Html.LabelFor(model => model.MId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MedicineName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MedicineName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedicineName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Manufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Manufacturer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Manufacturer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManufactureDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManufactureDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManufactureDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DosageForm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DosageForm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DosageForm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <!-- Label for file input (ImageFile) -->
            <label class="control-label col-md-2">Upload Image</label>
            <div class="col-md-10">
                <!-- File input for image upload -->
                <input type="file" name="ImageFile" class="form-control" />
                <!-- Validation message (not for ImagePath but for ImageFile upload issues) -->
                @Html.ValidationMessage("ImageFile", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Strength, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Strength, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Strength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
            @Html.ActionLink("Back to List", "ReadData")
        </div>
    </div>
}


//readdata

@model IEnumerable<MedicineShop.Models.Medicine>

@{
    ViewBag.Title = "ReadData";
    Layout = "~/Views/Shared/Admin_LayoutPage1.cshtml";

}

<h2>ReadData</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<style>
    /* General table styling */
    .table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
        font-size: 18px;
        text-align: left;
    }

        /* Table headers */
        .table th {
            background-color: #4CAF50;
            color: white;
            padding: 10px;
        }

        /* Table rows */
        .table td {
            padding: 10px;
            border: 1px solid #ddd;
        }

        /* Row hover effect */
        .table tr:hover {
            background-color: #f1f1f1;
        }

    /* Action links styling */
    .action-link {
        padding: 5px;
        text-decoration: none;
        border-radius: 4px;
    }

    .edit-link {
        color: white;
        background-color: #007BFF; /* Blue for Edit */
        padding: 5px 10px;
    }

    .details-link {
        color: white;
        background-color: #17A2B8; /* Teal for Details */
        padding: 5px 10px;
    }

    .delete-link {
        color: white;
        background-color: #DC3545; /* Red for Delete */
        padding: 5px 10px;
    }

    /* Hover effects for action links */
    .edit-link:hover {
        background-color: #0056b3;
    }

    .details-link:hover {
        background-color: #138496;
    }

    .delete-link:hover {
        background-color: #C82333;
    }

    /* Create new button styling */
    p a {
        background-color: #4CAF50;
        color: white;
        padding: 8px 16px;
        text-decoration: none;
        border-radius: 5px;
    }

        p a:hover {
            background-color: #45a049;
        }
</style>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.MedicineName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Manufacturer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ManufactureDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ExpiryDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DosageForm)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MDescription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImagePath)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Strength)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.MedicineName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Manufacturer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ManufactureDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExpiryDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DosageForm)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ImagePath)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Strength)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.MId }, new { @class = "action-link edit-link" })
                @Html.ActionLink("Details", "Details", new { id = item.MId }, new { @class = "action-link details-link" })
                @Html.ActionLink("Delete", "Delete", new { id = item.MId }, new { @class = "action-link delete-link" })
            </td>
        </tr>
    }

</table>

